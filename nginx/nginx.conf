
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  /usr/local/var/log/nginx/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       9090;
        server_name  localhost;
        
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            
            rewrite_log on;
            
        
            # Pass to the actual MarkLogic server
            proxy_pass http://127.0.0.1:8070;
            
            # Add the authentication here. Gets round all sorts of issues in the client app
            # (like the terrifyingly poor docs for HTTP Interceptors in Angular 4.3)
            proxy_set_header Authorization "Basic c2xpZGVzaG93LXVzZXI6c2lkZXNob3ctYjBi";

            if ($request_method = 'OPTIONS') {
               #
               # Custom headers and headers various browsers *should* be OK with but aren't
               #
               #
               # Tell client that this pre-flight info is valid for 20 days
               #
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';        
               add_header 'Access-Control-Max-Age' 1728000;
               add_header 'Content-Type' 'text/plain; charset=utf-8';
               add_header 'Content-Length' 0;
               return 204;
            }
            
            if ($request_method = 'POST') {
                
                
                # Rewrites for POST requests.
                rewrite /api/presentations/([^/]+)/([^/]+)$ /api/presentations?rs:presentation=$1&rs:deck=$2;                
                
            
                # Rewrite /api/ if it's still there.
                rewrite /api/(.+)$ /v1/resources/$1 last;
                
                
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            }
            
            
            if ($request_method = 'PUT') {
                   
                
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            }
            
            if ($request_method = 'GET') {
                
                # Rewrites for get requests
                
                # Rewrite to get a single presentation
                rewrite /api/presentations/([^/]+)$  /api/presentations?rs:presentation=$1;
                
                # Rewrite to allow both of /api/decks/DECKID and /api/decks/DECKID
                rewrite /api/decks/([^/]+)$  /api/decks?rs:deck=$1;
            
                # As above for slide. The first one handles requested by index
                # because they would match the sides by id pattern as well.
                rewrite /api/slides/([^/]+)/([\d+]+)$ /v1/resources/slides?rs:deck=$1&rs:index=$2 last;
                rewrite /api/slide/([^/]+)/([^/]+)$  /api/slides?rs:deck=$1&rs:slide=$2;
            
                # Rewrite /api/ if it's still there.
                rewrite /api/(.+)$ /v1/resources/$1 last;
                
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
             }

        }


    }

}